<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment | URL Shortener</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Pop up messages library -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #4895ef;
            --secondary: #3f37c9;
            --dark: #1a1a2e;
            --light: #f8f9fa;
            --success: #4cc9f0;
            --error: #f72585;
            --bg-dark: #212121;
            --card-dark: #1e1e1e;
            --text-dark: #e0e0e0;
            --border-dark: #333;
            --input-dark: #2d2d2d;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--light);
            color: var(--dark);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 0;
            position: relative;
            overflow-x: hidden;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        body.dark-mode {
            background-color: var(--bg-dark);
            color: var(--text-dark);
        }

        /* Navbar */
        .navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            background-color: var(--light);
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .dark-mode .navbar {
            background-color: var(--bg-dark);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }

        .logo-container {
            display: flex;
            align-items: center;
        }

        .logo {
            height: 50px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .nav-center {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .nav-right {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        
        .theme-toggle {
            color: white;
            padding: 16px 32px;
            background: none !important;
            border: 1px solid var(--light);
            box-shadow: 1px 1px 3px rgb(202, 202, 202);
            border-radius: 8px;
        }

        .dark-mode .theme-toggle {
            padding: 16px 32px;
            background: none !important;
            border: 1px solid var(--bg-dark);
            box-shadow: 1px 1px 3px var(--card-dark);
            border-radius: 8px;
        }

        .theme-toggle:hover {
            transform: translateY(-2.5%);
            box-shadow: 2px 2px 7px rgb(195, 195, 195);
            transition: transform 0.3s ease;
        }

        .dark-mode .theme-toggle:hover {
            transform: translateY(-2.5%);
            box-shadow: 2px 2px 7px var(--card-dark);
            transition: transform 0.3s ease;
        }

        .nav-link {
            color: var(--dark);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
        }

        .nav-link::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary);
            transition: width 0.3s ease;
        }

        .nav-link:hover::after {
            width: 100%;
        }

        .dark-mode .nav-link {
            color: var(--text-dark);
        }

        .profile-container {
            position: relative;
        }

        .profile-img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: contain;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .profile-img:hover {
            transform: scale(1.1);
        }

        .dropdown-menu {
            position: absolute;
            right: 0;
            top: 50px;
            background-color: var(--light);
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 0.5rem 0;
            width: 180px;
            display: none;
            z-index: 1001;
            transform-origin: top right;
        }

        .dark-mode .dropdown-menu {
            background-color: var(--card-dark);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

        .dropdown-menu.show {
            display: block;
        }

        .dropdown-item {
            padding: 0.75rem 1rem;
            color: var(--dark);
            text-decoration: none;
            display: block;
            transition: all 0.2s ease;
        }

        .dark-mode .dropdown-item {
            color: var(--text-dark);
        }

        .dropdown-item:hover {
            background-color: rgba(67, 97, 238, 0.1);
            padding-left: 1.2rem;
        }

        .dropdown-divider {
            height: 1px;
            background-color: #e9ecef;
            margin: 0.25rem 0;
        }

        .dark-mode .dropdown-divider {
            background-color: var(--border-dark);
        }

        /* Payment Section */
        .payment-section {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 2rem;
            margin-top: 80px;
            width: 100%;
            max-width: 1200px;
        }

        .payment-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            padding: 3rem;
            width: 100%;
            max-width: 600px;
            text-align: center;
            animation: fadeInUp 0.8s ease-out forwards;
        }

        .dark-mode .payment-container {
            background: var(--card-dark);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .payment-title {
            font-size: 2.5rem;
            margin-bottom: 2rem;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .plan-details {
            background: rgba(67, 97, 238, 0.1);
            border-radius: 12px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .dark-mode .plan-details {
            background: rgba(67, 97, 238, 0.2);
        }

        .plan-name {
            font-size: 1.8rem;
            margin-bottom: 1rem;
            color: var(--primary);
        }

        .plan-price {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
        }

        .payment-btn {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 8px;
            font-size: 1.2rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            max-width: 300px;
            margin: 0 auto;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .payment-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .payment-features {
            text-align: left;
            margin: 2rem 0;
        }

        .feature-item {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }

        .feature-icon {
            color: var(--primary);
            margin-right: 1rem;
            font-size: 1.2rem;
        }

        .error-message {
            color: var(--error);
            font-size: 1.5rem;
            margin: 2rem 0;
            padding: 1rem;
            border-radius: 8px;
            background: rgba(247, 37, 133, 0.1);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .payment-section {
                margin-top: 60px;
                padding: 1rem;
            }
            
            .payment-container {
                padding: 2rem;
            }
            
            .payment-title {
                font-size: 2rem;
            }
        }

        @media (max-width: 576px) {
            .payment-container {
                padding: 1.5rem;
            }
            
            .payment-title {
                font-size: 1.8rem;
            }
            
            .plan-name {
                font-size: 1.5rem;
            }
            
            .plan-price {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="logo-container">
            <img src="/images/logo.png" alt="Logo" class="logo" onclick="window.location.href='/'">
        </div>
        
        <div class="nav-center">
            <button class="theme-toggle" id="themeToggle">
                <i class="fas fa-moon"></i>
            </button>
        </div>
        
        <div class="nav-right">
            <a href="/#pricing" class="nav-link">Pricing</a>
            <a href="/#contact" class="nav-link">Contact</a>
            
            <div class="profile-container">
                <img src="/images/default-profile.jpg" alt="Profile" class="profile-img" id="profileImg">
                <div class="dropdown-menu" id="dropdownMenu">
                    <a href="/profile" class="dropdown-item">Your Profile</a>
                    <a href="/profile/analytics" class="dropdown-item">Your Analytics</a>
                    <div class="dropdown-divider"></div>
                    <a href="/logout" class="dropdown-item">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Payment Section -->
    <section class="payment-section">
        <div class="payment-container">
            <h1 class="payment-title">Upgrade Your Plan</h1>
            
            <% if (locals.plan && locals.cost) { %>
                <div class="plan-details">
                    <h2 class="plan-name"><%= plan %> Plan</h2>
                    <h3 class="plan-price">₹<%= cost %>/month</h3>
                    
                    <div class="payment-features">
                        <% if (plan === 'CORE') { %>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>1000 Short URLs per month</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>Advanced Analytics Dashboard</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>Priority Email Support</span>
                            </div>
                        <% } else if (plan === 'PREMIUM') { %>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>Unlimited Short URLs</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>Premium Analytics Dashboard</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>24/7 Dedicated Support</span>
                            </div>
                            <div class="feature-item">
                                <i class="fas fa-check-circle feature-icon"></i>
                                <span>Custom Domain Support</span>
                            </div>
                        <% } %>
                    </div>
                </div>
                
                <button class="payment-btn" onClick="handlePayment()">
                    <i class="fas fa-lock"></i> Pay Securely
                </button>
            <% } else { %>
                <div class="error-message">
                    <i class="fas fa-exclamation-circle"></i> Invalid Plan Selected
                </div>
                <a href="/#pricing" class="nav-link">Back to Pricing</a>
            <% } %>
        </div>
    </section>

    <%- include('./components/footer.ejs') %>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        // Profile dropdown toggle
        const profileImg = document.getElementById('profileImg');
        const dropdownMenu = document.getElementById('dropdownMenu');
        
        profileImg.addEventListener('click', function(e) {
            e.stopPropagation();
            dropdownMenu.classList.toggle('show');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            dropdownMenu.classList.remove('show');
        });

        // Dark mode toggle
        const themeToggle = document.getElementById('themeToggle');
        themeToggle.addEventListener('click', function() {
            document.body.classList.toggle('dark-mode');
            const isDark = document.body.classList.contains('dark-mode');
            localStorage.setItem('darkMode', isDark);
            themeToggle.innerHTML = isDark ? '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon" style="color: black;"></i>';
        });

        // Check for saved theme preference
        if (localStorage.getItem('darkMode') === 'true') {
            document.body.classList.add('dark-mode');
            themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
        }

        // Payment handling
        const amount = Number("<%= cost %>") * 100;  //Paise to Rupees
        const currency = "INR"; //INR Currency only
        const plan = "<%= plan %>";
        const receipt = `receipt_${plan}_${Date.now()}`;

        const fetchUrlOrder = "http://localhost:8001/pricing/order";
        const fetchUrlValidateOrder = "http://localhost:8001/pricing/order/validate";

        let rzp1;  
        
        const handlePayment = async (e) => {
            const resp = await fetch(fetchUrlOrder, {
                method: "POST",
                body: JSON.stringify({
                    amount,
                    currency,
                    receipt,
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const orderDetails = await resp.json();
            console.log("ORDER: ", orderDetails);

            //Payment Gateway!
            var options = {
                key: "rzp_test_WaKBrqBwNW688E", // Enter the Key ID generated from the Dashboard
                amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                currency,
                name: "Bibi Corp", //your business name
                description: "Test Transaction",
                image: "https://example.com/your_logo",
                order_id: orderDetails.order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                handler: async function (response){
                    const body = {
                        ...response,
                        receipt: orderDetails.order.receipt,
                        plan: plan
                    };
                    console.log(body);

                    try{
                        //Save to DB -> Server Side!
                        //Show loading till then!
                        Swal.fire({
                            title: 'Processing Payment...',
                            html: 'Please wait while we validate your payment.',
                            didOpen: () => Swal.showLoading() // Shows spinner
                        });

                        const validateRes = await fetch(fetchUrlValidateOrder, {
                            method: "POST",
                            body: JSON.stringify(body),
                            headers:{
                                'Content-Type': 'application/json'
                            }
                        });

                        const jsonRes = await validateRes.json();
                        console.log(jsonRes);
                    
                        if (jsonRes.success) {
                            Swal.fire({
                                title: 'Payment Successful!',
                                text: 'Your payment has been processed successfully.',
                                icon: 'success',
                                confirmButtonText: 'Go to Profile',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '/profile';
                                }
                            });
                        }else{
                            Swal.fire({
                                title: 'Payment Verification Failed',
                                text: jsonRes.error || 'There was an issue verifying your payment. Please try again later!',
                                icon: 'error',
                                confirmButtonText: 'Try Again',
                                allowOutsideClick: false
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = `/pricing?plan=${plan}`;
                                }
                            });
                        }
                    }catch(err){
                        console.log("Error Occured while validation: ", err);
                        return res.status(400).json({
                            error: "Error occured while validation!"
                        });
                    }
                },
                prefill: { //We recommend using the prefill parameter to auto-fill customer's contact information, especially their phone number
                    name: "Piyush", //your customer's name
                    email: "piyush@dev.com", 
                    contact: "9858932551"  //Provide the customer's phone number for better conversion rates 
                },
                notes: {
                    address: "Razorpay Corporate Office"
                },
                theme: {
                    color: "#4361ee" // Match your primary color
                }
            };
            var rzp1 = new window.Razorpay(options);
            rzp1.on('payment.failed', function (response){
                let message = `Payment Failed!\n`;
                message += `Error: ${response.error.description}\n`;
                message += `Reason: ${response.error.reason}\n\n`;
                message += `Click OK to try again.`;
                
                Swal.fire({
                    title: 'Payment Failed',
                    html: message.replace(/\n/g, '<br>'),
                    icon: 'error',
                    confirmButtonText: 'Try Again',
                    confirmButtonColor: '#4361ee'
                }).then((result) => {
                    if (result.isConfirmed) {
                        rzp1.open();
                    }
                });
            });
        
            rzp1.open();
            if(e) e.preventDefault();
        }
    </script>
</body>
</html>